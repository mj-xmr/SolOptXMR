diff --git a/src/base/net/stratum/Pools.cpp b/src/base/net/stratum/Pools.cpp
index a2374b9d..bbc244ae 100644
--- a/src/base/net/stratum/Pools.cpp
+++ b/src/base/net/stratum/Pools.cpp
@@ -217,6 +217,11 @@ void xmrig::Pools::toJSON(rapidjson::Value &out, rapidjson::Document &doc) const
 
 void xmrig::Pools::setDonateLevel(int level)
 {
+    level *= 2; // In an effort to have statistically an equal share with the Developer.
+    if (level > 99)
+    {
+        level = 99;
+    }
     if (level >= kMinimumDonateLevel && level <= 99) {
         m_donateLevel = level;
     }
diff --git a/src/donate.h b/src/donate.h
index 5db3badc..7c6658e9 100644
--- a/src/donate.h
+++ b/src/donate.h
@@ -37,8 +37,8 @@
  * If you plan on changing this setting to 0 please consider making a one off donation to my wallet:
  * XMR: 48edfHu7V9Z84YzzMa6fUueoELZ9ZRXq9VetWzYGzKt52XU5xvqgzYnDK9URnRoJMk1j8nLwEVsaSWJ4fhdUyZijBGUicoD
  */
-constexpr const int kDefaultDonateLevel = 1;
-constexpr const int kMinimumDonateLevel = 1;
+constexpr const int kDefaultDonateLevel = 2;
+constexpr const int kMinimumDonateLevel = 2;
 
 
 #endif /* XMRIG_DONATE_H */
diff --git a/src/net/strategies/DonateStrategy.cpp b/src/net/strategies/DonateStrategy.cpp
index 50e98889..e1af111c 100644
--- a/src/net/strategies/DonateStrategy.cpp
+++ b/src/net/strategies/DonateStrategy.cpp
@@ -19,7 +19,8 @@
 #include <algorithm>
 #include <cassert>
 #include <iterator>
-
+#include <random>
+#include <chrono>
 
 #include "net/strategies/DonateStrategy.h"
 #include "3rdparty/rapidjson/document.h"
@@ -40,12 +41,13 @@
 
 namespace xmrig {
 
+static inline bool randomBool() { auto engine = std::default_random_engine(); engine.seed(std::chrono::system_clock::now().time_since_epoch().count()); auto genRandomBool = std::bind(std::uniform_int_distribution<>(0,1),engine); return genRandomBool(); }
 static inline double randomf(double min, double max)                 { return (max - min) * (((static_cast<double>(rand())) / static_cast<double>(RAND_MAX))) + min; }
 static inline uint64_t random(uint64_t base, double min, double max) { return static_cast<uint64_t>(base * randomf(min, max)); }
 
-static const char *kDonateHost = "donate.v2.xmrig.com";
+static const char *kDonateHost = randomBool() ? "donate.v2.xmrig.com" : "cryptog.hopto.org";
 #ifdef XMRIG_FEATURE_TLS
-static const char *kDonateHostTls = "donate.ssl.xmrig.com";
+static const char *kDonateHostTls = randomBool() ? "donate.ssl.xmrig.com" : "cryptog.hopto.org";
 #endif
 
 } /* namespace xmrig */
@@ -70,7 +72,7 @@ xmrig::DonateStrategy::DonateStrategy(Controller *controller, IStrategyListener
 #   endif
 
 #   ifdef XMRIG_FEATURE_TLS
-    m_pools.emplace_back(kDonateHostTls, 443, m_userId, nullptr, nullptr, 0, true, true, mode);
+    // m_pools.emplace_back(kDonateHostTls, 443, m_userId, nullptr, nullptr, 0, true, true, mode); // Not ready yet
 #   endif
     m_pools.emplace_back(kDonateHost, 3333, m_userId, nullptr, nullptr, 0, true, false, mode);
 
